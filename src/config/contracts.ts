export const ROLLBACK_MANAGER_ABI = [
  {
    inputs: [
      { internalType: "address", name: "_treasuryAddress", type: "address" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "AlreadySigned", type: "error" },
  { inputs: [], name: "FailedDeployment", type: "error" },
  {
    inputs: [
      { internalType: "uint256", name: "balance", type: "uint256" },
      { internalType: "uint256", name: "needed", type: "uint256" },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      { internalType: "uint256", name: "required", type: "uint256" },
      { internalType: "uint256", name: "provided", type: "uint256" },
    ],
    name: "InsufficientFee",
    type: "error",
  },
  { inputs: [], name: "InvalidAgent", type: "error" },
  { inputs: [], name: "InvalidRequestId", type: "error" },
  { inputs: [], name: "InvalidTreasury", type: "error" },
  { inputs: [], name: "InvalidUser", type: "error" },
  { inputs: [], name: "NotEnoughSignatures", type: "error" },
  { inputs: [], name: "NotWalletOwner", type: "error" },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  { inputs: [], name: "RequestAlreadyExecuted", type: "error" },
  { inputs: [], name: "WalletExists", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ImplementationDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldTreasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "user", type: "address" },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "WalletCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        components: [
          { internalType: "address", name: "user", type: "address" },
          { internalType: "address[]", name: "wallets", type: "address[]" },
          { internalType: "uint256", name: "threshold", type: "uint256" },
          {
            internalType: "address[]",
            name: "tokensToMonitor",
            type: "address[]",
          },
          {
            internalType: "enum RollbackWallet.TOKEN_TYPE[]",
            name: "tokenTypes",
            type: "uint8[]",
          },
          { internalType: "bool", name: "isRandomized", type: "bool" },
          { internalType: "address", name: "fallbackWallet", type: "address" },
          { internalType: "address", name: "agentWallet", type: "address" },
        ],
        indexed: false,
        internalType: "struct RollbackWalletManager.CreateWalletParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "WalletCreationProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "WalletCreationSigned",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIALISATION_FEE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "creationRequests",
    outputs: [
      { internalType: "uint256", name: "requestId", type: "uint256" },
      {
        components: [
          { internalType: "address", name: "user", type: "address" },
          { internalType: "address[]", name: "wallets", type: "address[]" },
          { internalType: "uint256", name: "threshold", type: "uint256" },
          {
            internalType: "address[]",
            name: "tokensToMonitor",
            type: "address[]",
          },
          {
            internalType: "enum RollbackWallet.TOKEN_TYPE[]",
            name: "tokenTypes",
            type: "uint8[]",
          },
          { internalType: "bool", name: "isRandomized", type: "bool" },
          { internalType: "address", name: "fallbackWallet", type: "address" },
          { internalType: "address", name: "agentWallet", type: "address" },
        ],
        internalType: "struct RollbackWalletManager.CreateWalletParams",
        name: "params",
        type: "tuple",
      },
      { internalType: "bool", name: "executed", type: "bool" },
      { internalType: "uint256", name: "signatureCount", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "requestId", type: "uint256" }],
    name: "finalizeWalletCreation",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "requestId", type: "uint256" }],
    name: "forceExecuteWalletCreation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllCreationRequests",
    outputs: [
      { internalType: "uint256[]", name: "ids", type: "uint256[]" },
      {
        components: [
          { internalType: "uint256", name: "requestId", type: "uint256" },
          {
            components: [
              { internalType: "address", name: "user", type: "address" },
              { internalType: "address[]", name: "wallets", type: "address[]" },
              { internalType: "uint256", name: "threshold", type: "uint256" },
              {
                internalType: "address[]",
                name: "tokensToMonitor",
                type: "address[]",
              },
              {
                internalType: "enum RollbackWallet.TOKEN_TYPE[]",
                name: "tokenTypes",
                type: "uint8[]",
              },
              { internalType: "bool", name: "isRandomized", type: "bool" },
              {
                internalType: "address",
                name: "fallbackWallet",
                type: "address",
              },
              { internalType: "address", name: "agentWallet", type: "address" },
            ],
            internalType: "struct RollbackWalletManager.CreateWalletParams",
            name: "params",
            type: "tuple",
          },
          { internalType: "address[]", name: "signers", type: "address[]" },
          { internalType: "bool", name: "executed", type: "bool" },
          { internalType: "uint256", name: "signatureCount", type: "uint256" },
        ],
        internalType: "struct RollbackWalletManager.CreationRequest[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllUsers",
    outputs: [{ internalType: "address[]", name: "users", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "requestId", type: "uint256" }],
    name: "getCreationRequest",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "requestId", type: "uint256" },
          {
            components: [
              { internalType: "address", name: "user", type: "address" },
              { internalType: "address[]", name: "wallets", type: "address[]" },
              { internalType: "uint256", name: "threshold", type: "uint256" },
              {
                internalType: "address[]",
                name: "tokensToMonitor",
                type: "address[]",
              },
              {
                internalType: "enum RollbackWallet.TOKEN_TYPE[]",
                name: "tokenTypes",
                type: "uint8[]",
              },
              { internalType: "bool", name: "isRandomized", type: "bool" },
              {
                internalType: "address",
                name: "fallbackWallet",
                type: "address",
              },
              { internalType: "address", name: "agentWallet", type: "address" },
            ],
            internalType: "struct RollbackWalletManager.CreateWalletParams",
            name: "params",
            type: "tuple",
          },
          { internalType: "address[]", name: "signers", type: "address[]" },
          { internalType: "bool", name: "executed", type: "bool" },
          { internalType: "uint256", name: "signatureCount", type: "uint256" },
        ],
        internalType: "struct RollbackWalletManager.CreationRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInitializationFee",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "rollback", type: "address" }],
    name: "getRollbackWallets",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "requestId", type: "uint256" }],
    name: "getSignersCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "user", type: "address" }],
    name: "getUserWallet",
    outputs: [
      { internalType: "contract RollbackWallet", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "user", type: "address" }],
    name: "hasRollbackWallet",
    outputs: [
      { internalType: "bool", name: "hasWallet", type: "bool" },
      { internalType: "address", name: "walletAddress", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "hasSigned",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "user", type: "address" },
          { internalType: "address[]", name: "wallets", type: "address[]" },
          { internalType: "uint256", name: "threshold", type: "uint256" },
          {
            internalType: "address[]",
            name: "tokensToMonitor",
            type: "address[]",
          },
          {
            internalType: "enum RollbackWallet.TOKEN_TYPE[]",
            name: "tokenTypes",
            type: "uint8[]",
          },
          { internalType: "bool", name: "isRandomized", type: "bool" },
          { internalType: "address", name: "fallbackWallet", type: "address" },
          { internalType: "address", name: "agentWallet", type: "address" },
        ],
        internalType: "struct RollbackWalletManager.CreateWalletParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "proposeWalletCreation",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "user", type: "address" },
      { internalType: "address", name: "newAgent", type: "address" },
    ],
    name: "requestAgentChange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestCounter",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "rollbackToWallets",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_treasury", type: "address" }],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "requestId", type: "uint256" }],
    name: "signWalletCreation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "userWallets",
    outputs: [
      { internalType: "contract RollbackWallet", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const ROLLBACK_WALLET_ABI = [
  { inputs: [], stateMutability: "nonpayable", type: "constructor" },
  {
    inputs: [{ internalType: "uint256", name: "voteId", type: "uint256" }],
    name: "AlreadyVoted",
    type: "error",
  },
  { inputs: [], name: "EnforcedPause", type: "error" },
  { inputs: [], name: "ExpectedPause", type: "error" },
  {
    inputs: [{ internalType: "uint256", name: "voteId", type: "uint256" }],
    name: "InsufficientApprovals",
    type: "error",
  },
  {
    inputs: [
      { internalType: "uint256", name: "required", type: "uint256" },
      { internalType: "uint256", name: "provided", type: "uint256" },
    ],
    name: "InsufficientFee",
    type: "error",
  },
  { inputs: [], name: "InvalidInitialization", type: "error" },
  { inputs: [], name: "InvalidRecoveryId", type: "error" },
  { inputs: [], name: "InvalidThreshold", type: "error" },
  { inputs: [], name: "InvalidTokenConfig", type: "error" },
  { inputs: [], name: "InvalidVoteId", type: "error" },
  { inputs: [], name: "InvalidVoteType", type: "error" },
  { inputs: [], name: "InvalidWalletAddress", type: "error" },
  {
    inputs: [{ internalType: "address", name: "wallet", type: "address" }],
    name: "NoValidWalletsToReplace",
    type: "error",
  },
  { inputs: [], name: "NotAgent", type: "error" },
  { inputs: [], name: "NotAuthorized", type: "error" },
  { inputs: [], name: "NotInitializing", type: "error" },
  { inputs: [], name: "RecoveryAlreadyExecuted", type: "error" },
  { inputs: [], name: "ReentrancyGuardReentrantCall", type: "error" },
  { inputs: [], name: "SelfVoteNotAllowed", type: "error" },
  { inputs: [], name: "TimelockNotExpired", type: "error" },
  {
    inputs: [{ internalType: "uint256", name: "voteId", type: "uint256" }],
    name: "VoteAlreadyExecuted",
    type: "error",
  },
  {
    inputs: [{ internalType: "uint256", name: "voteId", type: "uint256" }],
    name: "VoteExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum RollbackWallet.VoteType",
        name: "voteType",
        type: "uint8",
      },
    ],
    name: "VoteInProgress",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "wallet", type: "address" }],
    name: "WalletAlreadyExists",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "wallet", type: "address" }],
    name: "WalletIsObsolete",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "wallet", type: "address" }],
    name: "WalletNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "walletAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newBalanceHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "ActivityReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastActivity",
        type: "uint256",
      },
    ],
    name: "ActivityThresholdWarning",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAgent",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAgent",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "AgentWalletUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "recoveryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "EmergencyRecoveryExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recoveryTarget",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timelockEnd",
        type: "uint256",
      },
    ],
    name: "EmergencyRecoveryInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "EmergencyStopActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "EmergencyStopDeactivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldFallback",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newFallback",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "FallbackWalletUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "InactivityThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newRandomized",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "RandomizationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "walletAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "selectedWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomSeed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RandomizedWalletSelected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "targetWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RollbackAttemptFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "wallets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "RollbackPerformed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum RollbackWallet.TOKEN_TYPE",
        name: "tokenType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TokenTransferFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "newTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "enum RollbackWallet.TOKEN_TYPE[]",
        name: "newTokenTypes",
        type: "uint8[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "TokensMonitoringUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "voteId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      { indexed: false, internalType: "bool", name: "approved", type: "bool" },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentApprovals",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "VoteConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "voteId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "enum RollbackWallet.VoteType",
        name: "voteType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "VoteExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "voteId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "enum RollbackWallet.VoteType",
        name: "voteType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "targetValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "VoteInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "walletAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nextWalletInLine",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "WalletObsoleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPriority",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "WalletPriorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "walletAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRandomized",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fallbackWallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "tokensToMonitor",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "enum RollbackWallet.TOKEN_TYPE[]",
        name: "tokenTypes",
        type: "uint8[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "WalletsInitialized",
    type: "event",
  },
  {
    inputs: [],
    name: "EMERGENCY_ROLLBACK_FEE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EMERGENCY_TIMELOCK",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIALISATION_FEE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTE_EXPIRATION_TIME",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "agentWallet",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "wallet", type: "address" }],
    name: "checkAndSendWarning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "wallet", type: "address" }],
    name: "checkWalletEligibility",
    outputs: [
      { internalType: "bool", name: "isEligible", type: "bool" },
      { internalType: "uint256", name: "remainingTime", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "wallet", type: "address" }],
    name: "computeBalanceHash",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "voteId", type: "uint256" },
      { internalType: "bool", name: "approve", type: "bool" },
    ],
    name: "confirmVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "", type: "uint256" },
      { internalType: "address", name: "", type: "address" },
    ],
    name: "confirmedVotes",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "emergencyRecoveries",
    outputs: [
      { internalType: "address", name: "initiator", type: "address" },
      { internalType: "address", name: "target", type: "address" },
      { internalType: "address", name: "wallet", type: "address" },
      { internalType: "uint40", name: "timestamp", type: "uint40" },
      { internalType: "bool", name: "executed", type: "bool" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "recoveryId", type: "uint256" }],
    name: "executeEmergencyRecovery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fallbackWallet",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVotes",
    outputs: [
      {
        components: [
          {
            internalType: "enum RollbackWallet.VoteType",
            name: "voteType",
            type: "uint8",
          },
          { internalType: "address", name: "initiator", type: "address" },
          { internalType: "address", name: "targetAddress", type: "address" },
          { internalType: "uint256", name: "targetValue", type: "uint256" },
          { internalType: "uint256", name: "approvalsNeeded", type: "uint256" },
          {
            internalType: "uint256",
            name: "approvalsReceived",
            type: "uint256",
          },
          { internalType: "bool", name: "isExecuted", type: "bool" },
          { internalType: "uint256", name: "timestamp", type: "uint256" },
        ],
        internalType: "struct RollbackWallet.Vote[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllWallets",
    outputs: [
      {
        components: [
          { internalType: "address", name: "walletAddress", type: "address" },
          { internalType: "uint40", name: "lastActivity", type: "uint40" },
          { internalType: "uint16", name: "priorityPosition", type: "uint16" },
          { internalType: "bool", name: "isObsolete", type: "bool" },
          { internalType: "bytes32", name: "balanceHash", type: "bytes32" },
        ],
        internalType: "struct RollbackWallet.Wallet[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEligibleWallets",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEmergencyRecoveries",
    outputs: [
      {
        components: [
          { internalType: "address", name: "initiator", type: "address" },
          { internalType: "address", name: "target", type: "address" },
          { internalType: "address", name: "wallet", type: "address" },
          { internalType: "uint40", name: "timestamp", type: "uint40" },
          { internalType: "bool", name: "executed", type: "bool" },
        ],
        internalType: "struct RollbackWallet.EmergencyRecovery[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMonitoredTokens",
    outputs: [
      { internalType: "address[]", name: "tokens", type: "address[]" },
      {
        internalType: "enum RollbackWallet.TOKEN_TYPE[]",
        name: "tokenTypes",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfWalletsNotObsolete",
    outputs: [
      { internalType: "uint256", name: "walletCount", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriorityWalletNext",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSystemConfig",
    outputs: [
      { internalType: "uint256", name: "_threshold", type: "uint256" },
      { internalType: "bool", name: "_isRandomized", type: "bool" },
      { internalType: "address", name: "_fallbackWallet", type: "address" },
      { internalType: "address", name: "_agentWallet", type: "address" },
      { internalType: "address", name: "_treasury", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletAddresses",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "wallet", type: "address" }],
    name: "getWalletStats",
    outputs: [
      {
        components: [
          { internalType: "uint32", name: "totalRollbacks", type: "uint32" },
          { internalType: "uint40", name: "lastRollbackTime", type: "uint40" },
          {
            internalType: "uint32",
            name: "totalVotesInitiated",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "totalVotesParticipated",
            type: "uint32",
          },
        ],
        internalType: "struct RollbackWallet.WalletStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inactivityThreshold",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "agentWallet", type: "address" },
          { internalType: "bool", name: "isRandomized", type: "bool" },
          { internalType: "address", name: "fallbackWallet", type: "address" },
          { internalType: "address[]", name: "wallets", type: "address[]" },
          { internalType: "uint256", name: "threshold", type: "uint256" },
          {
            internalType: "address[]",
            name: "tokensToMonitor",
            type: "address[]",
          },
          {
            internalType: "enum RollbackWallet.TOKEN_TYPE[]",
            name: "tokenTypes",
            type: "uint8[]",
          },
          { internalType: "address", name: "treasuryAddress", type: "address" },
        ],
        internalType: "struct RollbackWallet.RollbackWalletParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "wallet", type: "address" },
      { internalType: "address", name: "recoveryTarget", type: "address" },
    ],
    name: "initiateEmergencyRecovery",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "isOwner",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRandomized",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RollbackWallet.VoteType",
        name: "voteType",
        type: "uint8",
      },
      { internalType: "address", name: "targetAddress", type: "address" },
    ],
    name: "isVoteInProgress",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "monitoredTokenTypes",
    outputs: [
      {
        internalType: "enum RollbackWallet.TOKEN_TYPE",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "monitoredTokens",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address[]", name: "eligibleWallets", type: "address[]" },
      { internalType: "uint256", name: "randomSeed", type: "uint256" },
    ],
    name: "performRollback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum RollbackWallet.VoteType",
        name: "voteType",
        type: "uint8",
      },
      { internalType: "address", name: "targetAddress", type: "address" },
      { internalType: "uint256", name: "targetValue", type: "uint256" },
    ],
    name: "requestVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "walletAddress", type: "address" },
    ],
    name: "resetActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newTreasury", type: "address" }],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newFallback", type: "address" }],
    name: "updateFallbackWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address[]", name: "newTokens", type: "address[]" },
      {
        internalType: "enum RollbackWallet.TOKEN_TYPE[]",
        name: "newTokenTypes",
        type: "uint8[]",
      },
    ],
    name: "updateMonitoredTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bool", name: "newRandomized", type: "bool" }],
    name: "updateRandomization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "wallet", type: "address" },
      { internalType: "uint256", name: "newPriority", type: "uint256" },
    ],
    name: "updateWalletPriority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "votes",
    outputs: [
      {
        internalType: "enum RollbackWallet.VoteType",
        name: "voteType",
        type: "uint8",
      },
      { internalType: "address", name: "initiator", type: "address" },
      { internalType: "address", name: "targetAddress", type: "address" },
      { internalType: "uint256", name: "targetValue", type: "uint256" },
      { internalType: "uint256", name: "approvalsNeeded", type: "uint256" },
      { internalType: "uint256", name: "approvalsReceived", type: "uint256" },
      { internalType: "bool", name: "isExecuted", type: "bool" },
      { internalType: "uint256", name: "timestamp", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "walletOwners",
    outputs: [
      { internalType: "address", name: "walletAddress", type: "address" },
      { internalType: "uint40", name: "lastActivity", type: "uint40" },
      { internalType: "uint16", name: "priorityPosition", type: "uint16" },
      { internalType: "bool", name: "isObsolete", type: "bool" },
      { internalType: "bytes32", name: "balanceHash", type: "bytes32" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "walletPriorities",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "walletStats",
    outputs: [
      { internalType: "uint32", name: "totalRollbacks", type: "uint32" },
      { internalType: "uint40", name: "lastRollbackTime", type: "uint40" },
      { internalType: "uint32", name: "totalVotesInitiated", type: "uint32" },
      {
        internalType: "uint32",
        name: "totalVotesParticipated",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const ERC20_ABI = [
  {
    inputs: [
      { name: "spender", type: "address" },
      { name: "amount", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { name: "owner", type: "address" },
      { name: "spender", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ name: "account", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", type: "uint8" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const ERC721_ABI = [
  {
    inputs: [
      { name: "to", type: "address" },
      { name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { name: "owner", type: "address" },
      { name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ name: "owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
] as const;

// Token types enum
export enum TOKEN_TYPE {
  ERC20 = 0,
  ERC721 = 1,
}

// Vote types enum
export enum VOTE_TYPE {
  AGENT_CHANGE = 0,
  THRESHOLD_CHANGE = 1,
  OBSOLETE_WALLET = 2,
}
