export const ROLLBACK_MANAGER_ABI = [
  {
    type: "constructor",
    inputs: [
      { name: "_treasuryAddress", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "INITIALISATION_FEE",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "creationRequests",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "requestId", type: "uint256", internalType: "uint256" },
      {
        name: "params",
        type: "tuple",
        internalType: "struct RollbackWalletManager.CreateWalletParams",
        components: [
          { name: "userAddress", type: "address", internalType: "address" },
          { name: "walletList", type: "address[]", internalType: "address[]" },
          { name: "timeThreshold", type: "uint256", internalType: "uint256" },
          {
            name: "tokensToMonitor",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "tokenTypes",
            type: "uint8[]",
            internalType: "enum RollbackWallet.TOKEN_TYPE[]",
          },
          { name: "isRandomized", type: "bool", internalType: "bool" },
          { name: "fallbackWallet", type: "address", internalType: "address" },
          { name: "agentWallet", type: "address", internalType: "address" },
        ],
      },
      { name: "executed", type: "bool", internalType: "bool" },
      { name: "signatureCount", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "finalizeWalletCreation",
    inputs: [{ name: "requestId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "forceExecuteWalletCreation",
    inputs: [{ name: "requestId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAllCreationRequests",
    inputs: [],
    outputs: [
      { name: "ids", type: "uint256[]", internalType: "uint256[]" },
      {
        name: "requests",
        type: "tuple[]",
        internalType: "struct RollbackWalletManager.CreationRequest[]",
        components: [
          { name: "requestId", type: "uint256", internalType: "uint256" },
          {
            name: "params",
            type: "tuple",
            internalType: "struct RollbackWalletManager.CreateWalletParams",
            components: [
              { name: "userAddress", type: "address", internalType: "address" },
              {
                name: "walletList",
                type: "address[]",
                internalType: "address[]",
              },
              {
                name: "timeThreshold",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "tokensToMonitor",
                type: "address[]",
                internalType: "address[]",
              },
              {
                name: "tokenTypes",
                type: "uint8[]",
                internalType: "enum RollbackWallet.TOKEN_TYPE[]",
              },
              { name: "isRandomized", type: "bool", internalType: "bool" },
              {
                name: "fallbackWallet",
                type: "address",
                internalType: "address",
              },
              { name: "agentWallet", type: "address", internalType: "address" },
            ],
          },
          { name: "signers", type: "address[]", internalType: "address[]" },
          { name: "executed", type: "bool", internalType: "bool" },
          { name: "signatureCount", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllUsers",
    inputs: [],
    outputs: [{ name: "users", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCreationRequest",
    inputs: [{ name: "requestId", type: "uint256", internalType: "uint256" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct RollbackWalletManager.CreationRequest",
        components: [
          { name: "requestId", type: "uint256", internalType: "uint256" },
          {
            name: "params",
            type: "tuple",
            internalType: "struct RollbackWalletManager.CreateWalletParams",
            components: [
              { name: "userAddress", type: "address", internalType: "address" },
              {
                name: "walletList",
                type: "address[]",
                internalType: "address[]",
              },
              {
                name: "timeThreshold",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "tokensToMonitor",
                type: "address[]",
                internalType: "address[]",
              },
              {
                name: "tokenTypes",
                type: "uint8[]",
                internalType: "enum RollbackWallet.TOKEN_TYPE[]",
              },
              { name: "isRandomized", type: "bool", internalType: "bool" },
              {
                name: "fallbackWallet",
                type: "address",
                internalType: "address",
              },
              { name: "agentWallet", type: "address", internalType: "address" },
            ],
          },
          { name: "signers", type: "address[]", internalType: "address[]" },
          { name: "executed", type: "bool", internalType: "bool" },
          { name: "signatureCount", type: "uint256", internalType: "uint256" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getImplementation",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getInitializationFee",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getRollbackWallets",
    inputs: [{ name: "rollback", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSignersCount",
    inputs: [{ name: "requestId", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUserWallet",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [
      { name: "", type: "address", internalType: "contract RollbackWallet" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasRollbackWallet",
    inputs: [{ name: "user", type: "address", internalType: "address" }],
    outputs: [
      { name: "hasWallet", type: "bool", internalType: "bool" },
      { name: "walletAddress", type: "address", internalType: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasSigned",
    inputs: [
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "implementation",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proposeWalletCreation",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct RollbackWalletManager.CreateWalletParams",
        components: [
          { name: "userAddress", type: "address", internalType: "address" },
          { name: "walletList", type: "address[]", internalType: "address[]" },
          { name: "timeThreshold", type: "uint256", internalType: "uint256" },
          {
            name: "tokensToMonitor",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "tokenTypes",
            type: "uint8[]",
            internalType: "enum RollbackWallet.TOKEN_TYPE[]",
          },
          { name: "isRandomized", type: "bool", internalType: "bool" },
          { name: "fallbackWallet", type: "address", internalType: "address" },
          { name: "agentWallet", type: "address", internalType: "address" },
        ],
      },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestAgentChange",
    inputs: [
      { name: "user", type: "address", internalType: "address" },
      { name: "newAgent", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestCounter",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "rollbackToWallets",
    inputs: [
      { name: "", type: "address", internalType: "address" },
      { name: "", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setTreasury",
    inputs: [{ name: "_treasury", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "signWalletCreation",
    inputs: [{ name: "requestId", type: "uint256", internalType: "uint256" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "treasury",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "userWallets",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [
      { name: "", type: "address", internalType: "contract RollbackWallet" },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "FeeCollected",
    inputs: [
      {
        name: "payer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "reason",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ImplementationDeployed",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TreasuryUpdated",
    inputs: [
      {
        name: "oldTreasury",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newTreasury",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WalletCreated",
    inputs: [
      { name: "user", type: "address", indexed: true, internalType: "address" },
      {
        name: "wallet",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WalletCreationProposed",
    inputs: [
      {
        name: "requestId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "proposer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "params",
        type: "tuple",
        indexed: false,
        internalType: "struct RollbackWalletManager.CreateWalletParams",
        components: [
          { name: "userAddress", type: "address", internalType: "address" },
          { name: "walletList", type: "address[]", internalType: "address[]" },
          { name: "timeThreshold", type: "uint256", internalType: "uint256" },
          {
            name: "tokensToMonitor",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "tokenTypes",
            type: "uint8[]",
            internalType: "enum RollbackWallet.TOKEN_TYPE[]",
          },
          { name: "isRandomized", type: "bool", internalType: "bool" },
          { name: "fallbackWallet", type: "address", internalType: "address" },
          { name: "agentWallet", type: "address", internalType: "address" },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WalletCreationSigned",
    inputs: [
      {
        name: "requestId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "signer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "AlreadySigned", inputs: [] },
  { type: "error", name: "FailedDeployment", inputs: [] },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      { name: "balance", type: "uint256", internalType: "uint256" },
      { name: "needed", type: "uint256", internalType: "uint256" },
    ],
  },
  {
    type: "error",
    name: "InsufficientFee",
    inputs: [
      { name: "required", type: "uint256", internalType: "uint256" },
      { name: "provided", type: "uint256", internalType: "uint256" },
    ],
  },
  { type: "error", name: "InvalidAgent", inputs: [] },
  { type: "error", name: "InvalidRequestId", inputs: [] },
  { type: "error", name: "InvalidTreasury", inputs: [] },
  { type: "error", name: "InvalidUser", inputs: [] },
  { type: "error", name: "NotEnoughSignatures", inputs: [] },
  { type: "error", name: "NotWalletOwner", inputs: [] },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "RequestAlreadyExecuted", inputs: [] },
  { type: "error", name: "WalletExists", inputs: [] },
] as const;

export const ROLLBACK_WALLET_ABI = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  {
    type: "function",
    name: "EMERGENCY_ROLLBACK_FEE",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "INITIALISATION_FEE",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "VOTE_EXPIRATION_TIME",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "agentWallet",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "checkAndSendWarning",
    inputs: [{ name: "wallet", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "checkWalletEligibility",
    inputs: [{ name: "wallet", type: "address", internalType: "address" }],
    outputs: [
      { name: "isEligible", type: "bool", internalType: "bool" },
      { name: "remainingTime", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "computeBalanceHash",
    inputs: [{ name: "wallet", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "confirmVote",
    inputs: [
      { name: "voteId", type: "uint256", internalType: "uint256" },
      { name: "approve", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "confirmedVotes",
    inputs: [
      { name: "", type: "uint256", internalType: "uint256" },
      { name: "", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "emergencyRecoveries",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "recoveryId", type: "uint256", internalType: "uint256" },
      { name: "initiator", type: "address", internalType: "address" },
      { name: "target", type: "address", internalType: "address" },
      { name: "wallet", type: "address", internalType: "address" },
      { name: "timestamp", type: "uint40", internalType: "uint40" },
      { name: "executed", type: "bool", internalType: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fallbackWallet",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllVotes",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct RollbackWallet.Vote[]",
        components: [
          { name: "voteId", type: "uint256", internalType: "uint256" },
          {
            name: "voteType",
            type: "uint8",
            internalType: "enum RollbackWallet.VoteType",
          },
          { name: "initiator", type: "address", internalType: "address" },
          { name: "targetAddress", type: "address", internalType: "address" },
          { name: "targetValue", type: "uint256", internalType: "uint256" },
          { name: "approvalsNeeded", type: "uint256", internalType: "uint256" },
          {
            name: "approvalsReceived",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "isExecuted", type: "bool", internalType: "bool" },
          { name: "timestamp", type: "uint256", internalType: "uint256" },
          { name: "recoveryWallet", type: "address", internalType: "address" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllWallets",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct RollbackWallet.Wallet[]",
        components: [
          { name: "walletAddress", type: "address", internalType: "address" },
          { name: "lastActivity", type: "uint40", internalType: "uint40" },
          { name: "priorityPosition", type: "uint16", internalType: "uint16" },
          { name: "isObsolete", type: "bool", internalType: "bool" },
          { name: "balanceHash", type: "bytes32", internalType: "bytes32" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEligibleWallets",
    inputs: [],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEmergencyRecoveries",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct RollbackWallet.EmergencyRecovery[]",
        components: [
          { name: "recoveryId", type: "uint256", internalType: "uint256" },
          { name: "initiator", type: "address", internalType: "address" },
          { name: "target", type: "address", internalType: "address" },
          { name: "wallet", type: "address", internalType: "address" },
          { name: "timestamp", type: "uint40", internalType: "uint40" },
          { name: "executed", type: "bool", internalType: "bool" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMonitoredTokens",
    inputs: [],
    outputs: [
      { name: "tokens", type: "address[]", internalType: "address[]" },
      {
        name: "tokenTypes",
        type: "uint8[]",
        internalType: "enum RollbackWallet.TOKEN_TYPE[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNumberOfWalletsNotObsolete",
    inputs: [],
    outputs: [
      { name: "walletCount", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getPriorityWalletNext",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSystemConfig",
    inputs: [],
    outputs: [
      { name: "_threshold", type: "uint256", internalType: "uint256" },
      { name: "_isRandomized", type: "bool", internalType: "bool" },
      { name: "_fallbackWallet", type: "address", internalType: "address" },
      { name: "_agentWallet", type: "address", internalType: "address" },
      { name: "_treasury", type: "address", internalType: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVoteDetails",
    inputs: [{ name: "voteId", type: "uint256", internalType: "uint256" }],
    outputs: [
      {
        name: "vote",
        type: "tuple",
        internalType: "struct RollbackWallet.Vote",
        components: [
          { name: "voteId", type: "uint256", internalType: "uint256" },
          {
            name: "voteType",
            type: "uint8",
            internalType: "enum RollbackWallet.VoteType",
          },
          { name: "initiator", type: "address", internalType: "address" },
          { name: "targetAddress", type: "address", internalType: "address" },
          { name: "targetValue", type: "uint256", internalType: "uint256" },
          { name: "approvalsNeeded", type: "uint256", internalType: "uint256" },
          {
            name: "approvalsReceived",
            type: "uint256",
            internalType: "uint256",
          },
          { name: "isExecuted", type: "bool", internalType: "bool" },
          { name: "timestamp", type: "uint256", internalType: "uint256" },
          { name: "recoveryWallet", type: "address", internalType: "address" },
        ],
      },
      { name: "voters", type: "address[]", internalType: "address[]" },
      { name: "hasVoted", type: "bool[]", internalType: "bool[]" },
      { name: "approved", type: "bool[]", internalType: "bool[]" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWalletAddresses",
    inputs: [],
    outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWalletStats",
    inputs: [{ name: "wallet", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct RollbackWallet.WalletStats",
        components: [
          { name: "totalRollbacks", type: "uint32", internalType: "uint32" },
          { name: "lastRollbackTime", type: "uint40", internalType: "uint40" },
          {
            name: "totalVotesInitiated",
            type: "uint32",
            internalType: "uint32",
          },
          {
            name: "totalVotesParticipated",
            type: "uint32",
            internalType: "uint32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "inactivityThreshold",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct RollbackWallet.RollbackWalletParams",
        components: [
          {
            name: "agentWalletAddress",
            type: "address",
            internalType: "address",
          },
          { name: "isRandomized", type: "bool", internalType: "bool" },
          {
            name: "fallbackWalletAddress",
            type: "address",
            internalType: "address",
          },
          { name: "walletList", type: "address[]", internalType: "address[]" },
          { name: "timeThreshold", type: "uint256", internalType: "uint256" },
          {
            name: "tokensToMonitor",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "tokenTypes",
            type: "uint8[]",
            internalType: "enum RollbackWallet.TOKEN_TYPE[]",
          },
          { name: "treasuryAddress", type: "address", internalType: "address" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "isOwner",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isRandomized",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "monitoredTokenTypes",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum RollbackWallet.TOKEN_TYPE",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "monitoredTokens",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pause",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "performRollback",
    inputs: [
      { name: "eligibleWallets", type: "address[]", internalType: "address[]" },
      { name: "randomSeed", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestVote",
    inputs: [
      {
        name: "voteType",
        type: "uint8",
        internalType: "enum RollbackWallet.VoteType",
      },
      { name: "targetAddress", type: "address", internalType: "address" },
      { name: "targetValue", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "resetActivity",
    inputs: [
      { name: "walletAddress", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setTreasury",
    inputs: [{ name: "newTreasury", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "treasury",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateFallbackWallet",
    inputs: [{ name: "newFallback", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateMonitoredTokens",
    inputs: [
      { name: "newTokens", type: "address[]", internalType: "address[]" },
      {
        name: "newTokenTypes",
        type: "uint8[]",
        internalType: "enum RollbackWallet.TOKEN_TYPE[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateRandomization",
    inputs: [{ name: "newRandomized", type: "bool", internalType: "bool" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateWalletPriority",
    inputs: [
      { name: "wallet", type: "address", internalType: "address" },
      { name: "newPriority", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "votes",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [
      { name: "voteId", type: "uint256", internalType: "uint256" },
      {
        name: "voteType",
        type: "uint8",
        internalType: "enum RollbackWallet.VoteType",
      },
      { name: "initiator", type: "address", internalType: "address" },
      { name: "targetAddress", type: "address", internalType: "address" },
      { name: "targetValue", type: "uint256", internalType: "uint256" },
      { name: "approvalsNeeded", type: "uint256", internalType: "uint256" },
      { name: "approvalsReceived", type: "uint256", internalType: "uint256" },
      { name: "isExecuted", type: "bool", internalType: "bool" },
      { name: "timestamp", type: "uint256", internalType: "uint256" },
      { name: "recoveryWallet", type: "address", internalType: "address" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "walletOwners",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [
      { name: "walletAddress", type: "address", internalType: "address" },
      { name: "lastActivity", type: "uint40", internalType: "uint40" },
      { name: "priorityPosition", type: "uint16", internalType: "uint16" },
      { name: "isObsolete", type: "bool", internalType: "bool" },
      { name: "balanceHash", type: "bytes32", internalType: "bytes32" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "walletPriorities",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "walletStats",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [
      { name: "totalRollbacks", type: "uint32", internalType: "uint32" },
      { name: "lastRollbackTime", type: "uint40", internalType: "uint40" },
      { name: "totalVotesInitiated", type: "uint32", internalType: "uint32" },
      {
        name: "totalVotesParticipated",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ActivityReset",
    inputs: [
      {
        name: "walletAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newBalanceHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "initiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ActivityThresholdWarning",
    inputs: [
      {
        name: "wallet",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "remainingTime",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "lastActivity",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AgentWalletUpdated",
    inputs: [
      {
        name: "oldAgent",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newAgent",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "initiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyRecoveryExecuted",
    inputs: [
      {
        name: "recoveryId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "wallet",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "target",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "executor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyRecoveryInitiated",
    inputs: [
      {
        name: "wallet",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "recoveryTarget",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "initiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "timelockEnd",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyStopActivated",
    inputs: [
      {
        name: "initiator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyStopDeactivated",
    inputs: [
      {
        name: "initiator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FallbackWalletUpdated",
    inputs: [
      {
        name: "oldFallback",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "newFallback",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "initiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FeeCollected",
    inputs: [
      {
        name: "payer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "reason",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InactivityThresholdUpdated",
    inputs: [
      {
        name: "oldThreshold",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newThreshold",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "initiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RandomizationUpdated",
    inputs: [
      {
        name: "newRandomized",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "initiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RandomizedWalletSelected",
    inputs: [
      {
        name: "walletAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "selectedWallet",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "randomSeed",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RollbackAttemptFailed",
    inputs: [
      {
        name: "wallet",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "reason",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "targetWallet",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RollbackPerformed",
    inputs: [
      {
        name: "wallets",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "executor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokenTransferFailed",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      { name: "from", type: "address", indexed: true, internalType: "address" },
      { name: "to", type: "address", indexed: true, internalType: "address" },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "tokenType",
        type: "uint8",
        indexed: false,
        internalType: "enum RollbackWallet.TOKEN_TYPE",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokensMonitoringUpdated",
    inputs: [
      {
        name: "newTokens",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
      {
        name: "newTokenTypes",
        type: "uint8[]",
        indexed: false,
        internalType: "enum RollbackWallet.TOKEN_TYPE[]",
      },
      {
        name: "initiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "VoteConfirmed",
    inputs: [
      {
        name: "voteId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "voter",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      { name: "approved", type: "bool", indexed: false, internalType: "bool" },
      {
        name: "currentApprovals",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "VoteExecuted",
    inputs: [
      {
        name: "voteId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "voteType",
        type: "uint8",
        indexed: true,
        internalType: "enum RollbackWallet.VoteType",
      },
      {
        name: "executor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "VoteInitiated",
    inputs: [
      {
        name: "voteId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "voteType",
        type: "uint8",
        indexed: true,
        internalType: "enum RollbackWallet.VoteType",
      },
      {
        name: "initiator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "targetAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "targetValue",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WalletObsoleted",
    inputs: [
      {
        name: "walletAddress",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "nextWalletInLine",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "executor",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WalletPriorityUpdated",
    inputs: [
      {
        name: "wallet",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newPriority",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "initiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WalletsInitialized",
    inputs: [
      {
        name: "walletAddresses",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
      {
        name: "threshold",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "isRandomized",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
      {
        name: "fallbackWallet",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "tokensToMonitor",
        type: "address[]",
        indexed: false,
        internalType: "address[]",
      },
      {
        name: "tokenTypes",
        type: "uint8[]",
        indexed: false,
        internalType: "enum RollbackWallet.TOKEN_TYPE[]",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "initiator",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyVoted",
    inputs: [{ name: "voteId", type: "uint256", internalType: "uint256" }],
  },
  { type: "error", name: "EnforcedPause", inputs: [] },
  { type: "error", name: "ExpectedPause", inputs: [] },
  {
    type: "error",
    name: "InsufficientApprovals",
    inputs: [{ name: "voteId", type: "uint256", internalType: "uint256" }],
  },
  {
    type: "error",
    name: "InsufficientFee",
    inputs: [
      { name: "required", type: "uint256", internalType: "uint256" },
      { name: "provided", type: "uint256", internalType: "uint256" },
    ],
  },
  { type: "error", name: "InvalidInitialization", inputs: [] },
  { type: "error", name: "InvalidRecoveryId", inputs: [] },
  { type: "error", name: "InvalidThreshold", inputs: [] },
  { type: "error", name: "InvalidTokenConfig", inputs: [] },
  { type: "error", name: "InvalidVoteId", inputs: [] },
  { type: "error", name: "InvalidVoteType", inputs: [] },
  { type: "error", name: "InvalidWalletAddress", inputs: [] },
  {
    type: "error",
    name: "NoValidWalletsToReplace",
    inputs: [{ name: "wallet", type: "address", internalType: "address" }],
  },
  { type: "error", name: "NotAgent", inputs: [] },
  { type: "error", name: "NotAuthorized", inputs: [] },
  { type: "error", name: "NotInitializing", inputs: [] },
  { type: "error", name: "RecoveryAlreadyExecuted", inputs: [] },
  { type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
  { type: "error", name: "SelfVoteNotAllowed", inputs: [] },
  { type: "error", name: "TimelockNotExpired", inputs: [] },
  {
    type: "error",
    name: "VoteAlreadyExecuted",
    inputs: [{ name: "voteId", type: "uint256", internalType: "uint256" }],
  },
  {
    type: "error",
    name: "VoteExpired",
    inputs: [{ name: "voteId", type: "uint256", internalType: "uint256" }],
  },
  {
    type: "error",
    name: "VoteInProgress",
    inputs: [
      {
        name: "voteType",
        type: "uint8",
        internalType: "enum RollbackWallet.VoteType",
      },
    ],
  },
  {
    type: "error",
    name: "WalletAlreadyExists",
    inputs: [{ name: "wallet", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "WalletIsObsolete",
    inputs: [{ name: "wallet", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "WalletNotFound",
    inputs: [{ name: "wallet", type: "address", internalType: "address" }],
  },
] as const;

export const ERC20_ABI = [
  {
    inputs: [
      { name: "spender", type: "address" },
      { name: "amount", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { name: "owner", type: "address" },
      { name: "spender", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ name: "account", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", type: "uint8" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
] as const;

export const ERC721_ABI = [
  {
    inputs: [
      { name: "to", type: "address" },
      { name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { name: "owner", type: "address" },
      { name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ name: "owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
] as const;

// Token types enum
export enum TOKEN_TYPE {
  ERC20 = 0,
  ERC721 = 1,
}

// Vote types enum
export enum VOTE_TYPE {
  AGENT_CHANGE = 0,
  THRESHOLD_CHANGE = 1,
  OBSOLETE_WALLET = 2,
  EMERGENCY_RECOVERY = 3,
}
